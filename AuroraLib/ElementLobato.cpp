//--- Aurora/AuroraLib/ElementLobato.cpp ---------------------------------------
//
//   This file is distributed under the University of Illinois Open Source
//   License. See LICENSE.TXT for details.
//
//------------------------------------------------------------------------------

#include "AuroraLib/Element.hpp"
#include "AuroraLib/Exception.hpp"
#include "AuroraLib/Math.hpp"
#include "AuroraLib/Physics.hpp"

namespace Aurora
{

/// Implements the class Element using the paramerization of Lobato and
/// van Dyck [Lobato2014]
class AURORA_API ElementLobato : public Element
{
public:
  ElementLobato(size_t atomicNumber, int charge,
                const std::array<Real, 5>& a,
                const std::array<Real, 5>& b);

  Real projectedPotential(Real rhoSqr, Real bFactor) const override;
  Real electronicFormFactor(Real kSqr, Real bFactor) const override;
  Real xRayFormFactor(Real kSqr) const override;
  Real potential(Real rSqr, Real bFactor) const override;
  Real hybridPotential(Real kappaSqr, Real z, Real bFactor) const override;
  Real hybridPhaseShift(Real kappaSqr, Real z, Real bFactor) const override;
  Real radiusSqr() const override;

private:
  std::array<Real, 5> mA;
  std::array<Real, 5> mB;
  std::array<Real, 5> mSqrtB;
};

ElementLobato::ElementLobato(size_t atomicNumber, int charge,
                             const std::array<Real, 5>& a,
                             const std::array<Real, 5>& b) :
  Element(atomicNumber, charge), mA(a), mB(b)
{
  for (size_t i = 0; i < 5; ++i)
    mSqrtB[i] = std::sqrt(mB[i]);
}

Real ElementLobato::projectedPotential(Real rhoSqr, Real bFactor) const
{
  (void)bFactor;
  assert(0 == bFactor && "b-Factor is ignored.");
  using namespace Math;
  using namespace Phys;

  if (rhoSqr < R(1e-6))
    return -std::numeric_limits<Real>::infinity();

  const Real scaledRho = twoPi * std::sqrt(rhoSqr);

  Real result = 0;
  for (size_t i = 0; i < 5; ++i)
  {
    const Real x = scaledRho / mSqrtB[i];
    result += mA[i] / mB[i] * (besselK0(x) + R(0.5) * x * besselK1(x));
  }

  constexpr Real preFactor = -4 * piSqr * powerOf<2>(hBar) / mE;
  return preFactor * result;
}

Real ElementLobato::electronicFormFactor(Real kSqr, Real bFactor) const
{
  const Real x = kSqr / (4 * Math::piSqr);

  Real result = 0;
  for (size_t i = 0; i < 5; ++i)
    result += mA[i] * (2 + mB[i] * x) / powerOf<2>(1 + mB[i] * x);

  return result * std::exp(-bFactor * kSqr);
}

Real ElementLobato::xRayFormFactor(Real kSqr) const
{
  const Real x = kSqr / (4 * Math::piSqr);

  Real result = 0;
  for (size_t i = 0; i < 5; ++i)
    result += mA[i] / (mB[i] * powerOf<2>(1 + mB[i] * x));

  constexpr Real preFactor = 2 * Math::piSqr * Phys::a0;
  return preFactor * result;
}

Real ElementLobato::potential(Real rSqr, Real bFactor) const
{
  (void)bFactor;
  assert(0 == bFactor && "b-Factor is ignored.");

  using namespace Math;
  using namespace Phys;

  const Real r = std::sqrt(rSqr);
  Real result = 0;

  for (size_t i = 0; i < 5; ++i)
  {
    result += mA[i] / powerOf<3>(mSqrtB[i]) * (pi + mSqrtB[i] / r)
      * std::exp(-twoPi * r / mSqrtB[i]);
  }

  constexpr Real preFactor = -2 * piSqr * powerOf<2>(hBar) / mE;
  return preFactor * result;
}

Real ElementLobato::hybridPotential(Real kappaSqr, Real z, Real bFactor) const
{
  using namespace Math;

  Real result = 0;

  if (0 == bFactor)
  {
    for (size_t i = 0; i < 5; ++i)
    {
      const Real aSqr = kappaSqr + 4 * piSqr / mB[i];
      const Real a = std::sqrt(aSqr);
      result += mA[i] * std::exp(-a * std::abs(z))
        / (powerOf<2>(mB[i]) * aSqr * a)
        * (mB[i] * kappaSqr + 6 * piSqr + 2 * piSqr * a * std::abs(z));
    }

    return 4 * powerOf<3>(pi) * result;
  }

  const Real sqrtBFactor = std::sqrt(bFactor);

  for (size_t i = 0; i < 5; ++i)
  {
    const Real aSqr = kappaSqr + 4 * piSqr / mB[i];
    const Real a = std::sqrt(aSqr);

    const Real h1 = mB[i] * kappaSqr + 6 * piSqr - 4 * piSqr * aSqr * bFactor
      - 2 * piSqr * a * z;
    const Real h2 = mB[i] * kappaSqr + 6 * piSqr - 4 * piSqr * aSqr * bFactor
      + 2 * piSqr * a * z;

    const Real g1 = std::erfc(a * sqrtBFactor + R(0.5) * z / sqrtBFactor);
    const Real g2 = std::erfc(a * sqrtBFactor - R(0.5) * z / sqrtBFactor);

    Real gsum = 0;
    if (0 != g1)
      gsum += std::exp( a * z) * h1 * g1;

    if (0 != g2)
      gsum += std::exp(-a * z) * h2 * g2;

    result += mA[i] / powerOf<2>(mB[i] * a)
      * (4 * std::sqrt(bFactor * piCubed) * std::exp(-R(0.25) * z * z / bFactor)
         + R(0.5) * std::exp(aSqr * bFactor) / a * gsum);
  }

  return 4 * powerOf<3>(pi) * std::exp(-bFactor * kappaSqr) * result;
}

Real ElementLobato::hybridPhaseShift(Real kappaSqr, Real z, Real bFactor) const
{
  using namespace Math;

  Real result = 0;
  if (0 == bFactor)
  {
    for (size_t i = 0; i < 5; ++i)
    {
      const Real aSqr = kappaSqr + 4 * piSqr / mB[i];
      const Real a = std::sqrt(aSqr);

      result += mA[i] / (powerOf<2>(mB[i]) * powerOf<2>(aSqr))
        * (std::copysign(mB[i] * kappaSqr + 8 * piSqr, z)
        - std::exp(-a * abs(z)) * std::copysign(mB[i] * kappaSqr + 8 * piSqr
        + 2 * piSqr * a * abs(z), z));
    }

    return pi * result;
  }

  const Real sqrtBFactor = std::sqrt(bFactor);

  for (size_t i = 0; i < 5; ++i)
  {
    const Real aSqr = kappaSqr + 4 * piSqr / mB[i];
    const Real a = std::sqrt(aSqr);

    const Real h1 = mB[i] * kappaSqr + 8 * piSqr - 4 * piSqr * bFactor * aSqr
      - 2 * piSqr * a * z;
    const Real h2 = mB[i] * kappaSqr + 8 * piSqr - 4 * piSqr * bFactor * aSqr
      + 2 * piSqr * a * z;

    const Real g1 = std::erfc(a * sqrtBFactor + R(0.5) * z / sqrtBFactor);
    const Real g2 = std::erfc(a * sqrtBFactor - R(0.5) * z / sqrtBFactor);

    // To avoid NANs by multiplying 0 times inf, we simply ignore the
    // problematic term, if it has been already evaluated to be zero.
    Real gsum = 0;
    if (0 != g1)
      gsum += std::exp( a * z) * h1 * g1;

    if (0 != g2)
      gsum -= std::exp(-a * z) * h2 * g2;

    result += mA[i] / (powerOf<2>(mB[i]) * powerOf<2>(aSqr))
      * ((mB[i] * kappaSqr + 8 * piSqr) * std::erf(R(0.5) * z / sqrtBFactor)
         + R(0.5) * std::exp(bFactor * aSqr) * gsum);
  }

  return pi * std::exp(-bFactor * kappaSqr) * result;
}

Real ElementLobato::radiusSqr() const
{
  Real sum = 0;
  for (unsigned i = 0; i < 5; ++i)
    sum += mA[i];

  return 6 * Phys::a0 * sum / mAtomicNumber;
}

class AURORA_API FormFactorParametrizationLobato :
  public FormFactorParametrization
{
public:
  FormFactorParametrizationLobato();
};

FormFactorParametrizationLobato::FormFactorParametrizationLobato()
{
  // [Lobato2014], table 1
  addElement(ConstElementPtr(new ElementLobato(  1, 0, // H
    {{R(6.473848488352918e-3), R(-4.901925767802290e-1), R( 5.732841603908765e-1), R(-3.794033014839905e-1), R(5.544264747740791e-1)}},
    {{R(2.785198853791489   ), R( 2.776204283306448   ), R( 2.775385910506251   ), R( 2.767593028672588   ), R(2.765118976429275   )}})));
  addElement(ConstElementPtr(new ElementLobato(  2, 0, // HE
    {{R(3.057451160998355   ), R(-6.200447791273253e+1), R( 6.400555370846145e+1), R(-5.001325785427806   ), R(1.517988287005264e-1)}},
    {{R(1.089672487260788   ), R( 9.398387981431211e-1), R( 9.252890343862655e-1), R( 8.229474987086506e-1), R(5.773931106754022e-1)}})));
  addElement(ConstElementPtr(new ElementLobato(  3, 0, // LI
    {{R(3.926222728861479   ), R(-4.548619626399980   ), R( 2.193353128786585   ), R( 6.994512650339657e-2), R(2.098642248519376e-3)}},
    {{R(8.142760135172804   ), R( 4.989410770078558   ), R( 4.144289992394109   ), R( 4.019223150656802e-1), R(1.564790347198236e-1)}})));
  addElement(ConstElementPtr(new ElementLobato(  4, 0, // BE
    {{R(3.398249705570541   ), R(-1.908668860956967   ), R( 3.907021175392274e-2), R(-1.116310102107145e-2), R(9.462044653575231e-3)}},
    {{R(4.442701786224095   ), R( 3.324515425264230   ), R( 1.897728803482149e-1), R( 8.719186146446036e-2), R(8.278090600413406e-2)}})));
  addElement(ConstElementPtr(new ElementLobato(  5, 0, // B
    {{R(1.472792486393293   ), R(-4.019330421993871e-1), R( 3.059989569826894e-1), R( 1.961442171731680e-2), R(9.771771060882025e-4)}},
    {{R(3.749740482818191   ), R( 5.880665361396738e-1), R( 5.156396131030110e-1), R( 1.213775700806037e-1), R(6.809824121603139e-2)}})));
  addElement(ConstElementPtr(new ElementLobato(  6, 0, // C
    {{R(1.244660886213433e+2), R(-2.203528570789638e+2), R( 1.952353522804791e+2), R(-9.810793612697997e+1), R(1.420230412136232e-2)}},
    {{R(2.421208492560056   ), R( 2.305379437524258   ), R( 2.048519321065642   ), R( 1.933525529175474   ), R(7.689768184783397e-2)}})));
  addElement(ConstElementPtr(new ElementLobato(  7, 0, // N
    {{R(5.813271507025561e+1), R(-1.475424090878127e+2), R( 1.301430656496395e+2), R(-3.961956740841543e+1), R(1.059577633314809e-2)}},
    {{R(1.700448564134711   ), R( 1.559038526017404   ), R( 1.415768274731469   ), R( 1.278418182054558   ), R(5.655877984748055e-2)}})));
  addElement(ConstElementPtr(new ElementLobato(  8, 0, // O
    {{R(2.994740452423624e+1), R(-7.761012662552783e+1), R( 9.988177646231442e+1), R(-5.121270055056731e+1), R(8.196189544460320e-3)}},
    {{R(1.302839878800107   ), R( 1.157941052583095   ), R( 1.009885493380251   ), R( 9.433279714332660e-1), R(4.331976113218256e-2)}})));
  addElement(ConstElementPtr(new ElementLobato(  9, 0, // F
    {{R(9.489848945035248e-1), R(-3.013339230435549e+1), R( 5.279650781273386e+1), R(-2.270627037952724e+1), R(6.569976645314410e-3)}},
    {{R(1.458829331986459   ), R( 6.887799931876800e-1), R( 6.542398693466957e-1), R( 6.148361308119943e-1), R(3.428374194950112e-2)}})));
  addElement(ConstElementPtr(new ElementLobato( 10, 0, // NE
    {{R(5.827411922209074e-1), R( 3.706765618410549e-1), R(-5.467449673508092e-1), R( 4.140526824802081e-1), R(5.199030808639931e-3)}},
    {{R(1.281185731438772   ), R( 4.445208971704776e-1), R( 1.986508755104810e-1), R( 1.854772466562765e-1), R(2.757383820338858e-2)}})));
  addElement(ConstElementPtr(new ElementLobato( 11, 0, // NA
    {{R(2.367006039467926e+1), R(-2.185317861597425e+1), R( 5.924994481089464e-1), R(-2.446522903102440e-2), R(4.839502217065358e-3)}},
    {{R(8.451487735146031   ), R( 8.040966004742982   ), R( 6.249960005263150e-1), R( 1.324503949472964e-1), R(2.339943620498786e-2)}})));
  addElement(ConstElementPtr(new ElementLobato( 12, 0, // MG
    {{R(4.855010476871495   ), R(-2.662209064768437   ), R( 4.780012360851080e-1), R(-7.023070646920648e-2), R(3.989058281040198e-3)}},
    {{R(5.946392738424565   ), R( 4.171303125206979   ), R( 3.982698081503743e-1), R( 1.618861858374742e-1), R(1.953450563631035e-2)}})));
  addElement(ConstElementPtr(new ElementLobato( 13, 0, // AL
    {{R(2.834095616075075   ), R(-4.280041333782610   ), R( 4.421916805483114   ), R(-3.457744718964006e-2), R(3.523859414060799e-3)}},
    {{R(6.662350239805332   ), R( 5.512947222240214e-1), R( 5.093289634459738e-1), R( 1.117848374253312e-1), R(1.676023518052574e-2)}})));
  addElement(ConstElementPtr(new ElementLobato( 14, 0, // SI
    {{R(2.871891426116124   ), R(-2.061735011951735   ), R( 2.171140242044787   ), R(-6.630736330588019e-2), R(3.010707096705137e-3)}},
    {{R(5.084871036429896   ), R( 4.291781853051262e-1), R( 3.664854341921622e-1), R( 1.197106112969034e-1), R(1.439945361283975e-2)}})));
  addElement(ConstElementPtr(new ElementLobato( 15, 0, // P
    {{R(2.791518400231514   ), R(-4.365068378238221   ), R( 4.435584555166990   ), R(-8.096357733994739e-2), R(2.679000179664404e-3)}},
    {{R(3.900659618654661   ), R( 3.298259683771500e-1), R( 3.060899565058886e-1), R( 1.080832325459728e-1), R(1.258944953311868e-2)}})));
  addElement(ConstElementPtr(new ElementLobato( 16, 0, // S
    {{R(2.679714156101995   ), R(-4.742528222307552e-1), R( 5.148359489896877e-1), R(-9.583600249907225e-2), R(2.488719638189352e-3)}},
    {{R(3.068891211999711   ), R( 3.782167021858090e-1), R( 1.887218119025488e-1), R( 9.233705900314941e-2), R(1.119208772411441e-2)}})));
  addElement(ConstElementPtr(new ElementLobato( 17, 0, // CL
    {{R(2.566248399800203   ), R(-3.388763508285917e-1), R( 1.145845587555150   ), R(-9.231093165470796e-1), R(2.291680020410422e-3)}},
    {{R(2.415949203656124   ), R( 4.214142393102160e-1), R( 1.095924049758303e-1), R( 9.909554582267530e-2), R(9.996659489275210e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 18, 0, // AR
    {{R(2.459817464140685   ), R(-3.641981770769951e-1), R( 2.505844772224745e-1), R(-5.774370295443458e-2), R(2.301438668285837e-3)}},
    {{R(1.940046319888566   ), R( 3.992410678843988e-1), R( 1.174724062744122e-1), R( 5.678037260236218e-2), R(9.155798329207080e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 19, 0, // K
    {{R(5.811078786014548   ), R(-5.025370965394226e+1), R( 4.886094120598425e+1), R( 7.406285920483829e-2), R(7.278027386262219e-4)}},
    {{R(1.266914833990368e+1), R( 3.956410396981665   ), R( 3.683850595771545   ), R( 1.074585175695628e-1), R(6.655767893915011e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 20, 0, // CA
    {{R(2.117811615241595e+1), R(-3.390438243174689e+2), R( 3.227569585232967e+2), R( 6.500776738969967e-2), R(6.558743665785935e-4)}},
    {{R(6.396086194317362   ), R( 3.740247138917495   ), R( 3.648884499226053   ), R( 9.450906345146735e-2), R(5.985206198837586e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 21, 0, // SC
    {{R(1.260351865721486e+1), R(-2.768753820537026e+2), R( 2.688716039073428e+2), R( 5.568241788974580e-2), R(5.770712551453996e-4)}},
    {{R(6.156256153638529   ), R( 3.088735542666793   ), R( 3.027276632985483   ), R( 8.188747483752157e-2), R(5.382898320507976e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 22, 0, // TI
    {{R(8.575957752381299   ), R(-2.103315634653049e+2), R( 2.060971726015414e+2), R( 4.777739489772619e-2), R(5.057164844803206e-4)}},
    {{R(6.007806688755818   ), R( 2.602858567452130   ), R( 2.553523450511056   ), R( 7.114294840241539e-2), R(4.856284393837261e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 23, 0, // V
    {{R(6.527684332347890   ), R(-2.004305768291727e+2), R( 1.980150538899940e+2), R( 4.139115180640056e-2), R(4.474550243298565e-4)}},
    {{R(5.835524793524481   ), R( 2.232559523811276   ), R( 2.197860185942290   ), R( 6.239738768285473e-2), R(4.403836490799580e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 24, 0, // CR
    {{R(3.028317848436913   ), R(-9.553939330814323e+1), R( 9.617615623521981e+1), R( 3.597773159579877e-2), R(3.914928907184223e-4)}},
    {{R(8.359115043146318   ), R( 1.802637902641032   ), R( 1.775094889570472   ), R( 5.481444121431137e-2), R(3.998289689160348e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 25, 0, // MN
    {{R(4.374175506331227   ), R(-1.609255109187795e+2), R( 1.602733080603223e+2), R( 3.123038610491624e-2), R(3.469660210209380e-4)}},
    {{R(5.510317055049282   ), R( 1.687982164024339   ), R( 1.666140477777024   ), R( 4.833703903212770e-2), R(3.647469600530682e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 26, 0, // FE
    {{R(3.798100908368596   ), R(-9.168935493816872e+1), R( 9.144542521554298e+1), R( 2.727543440276047e-2), R(3.033798543837710e-4)}},
    {{R(5.317126458994331   ), R( 1.497130948847481   ), R( 1.468092418044105   ), R( 4.272478501289549e-2), R(3.327918552318741e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 27, 0, // CO
    {{R(3.330378744675443   ), R(-7.700175964729671e+1), R( 7.707252217905169e+1), R( 2.399046690405699e-2), R(2.682566655239420e-4)}},
    {{R(5.181359645795432   ), R( 1.329151222651394   ), R( 1.302849289632289   ), R( 3.806454868263710e-2), R(3.050100079915708e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 28, 0, // NI
    {{R(2.969080787252864   ), R(-7.574770691290402e+1), R( 7.603982876253073e+1), R( 2.101621136929670e-2), R(2.311517511351530e-4)}},
    {{R(5.041809491093800   ), R( 1.182755079216293   ), R( 1.162165458466299   ), R( 3.374790878830353e-2), R(2.786808620707405e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 29, 0, // CU
    {{R(1.752071452121456   ), R(-4.304105234921245e+1), R( 4.407059155435739e+1), R( 1.868761540881447e-2), R(2.017273247916241e-4)}},
    {{R(6.187504979861871   ), R( 1.002662636289766   ), R( 9.853843113530303e-1), R( 3.029847039161176e-2), R(2.558555987488791e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 30, 0, // ZN
    {{R(2.466371104994591   ), R(-6.146785413325375e+1), R( 6.201769452374813e+1), R( 1.641601739314162e-2), R(1.724871175953809e-4)}},
    {{R(4.910280784938159   ), R( 9.678985203229922e-1), R( 9.512838347753555e-1), R( 2.696009676675663e-2), R(2.341096110462537e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 31, 0, // GA
    {{R(2.760102031084283   ), R(-3.444526142074679e+1), R( 3.522622672440163e+1), R( 1.320671969994199e-2), R(1.259455609282457e-4)}},
    {{R(6.101282245376627   ), R( 7.651433135534649e-1), R( 7.513286233828597e-1), R( 2.248796343172512e-2), R(2.067373742787123e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 32, 0, // GE
    {{R(3.182416352600000   ), R(-5.245140378111667e+1), R( 5.296908271622185e+1), R( 1.140961685918648e-2), R(9.509543581450579e-5)}},
    {{R(5.017190408609147   ), R( 7.123957644377982e-1), R( 7.022801925281940e-1), R( 1.967472956940154e-2), R(1.841466144940115e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 33, 0, // AS
    {{R(3.456429691196040   ), R(-3.331760444317212e+1), R( 3.357121938553322e+1), R( 9.790022956403421e-3), R(6.534348622651725e-5)}},
    {{R(4.013580160329452   ), R( 6.623557780506291e-1), R( 6.457719410560738e-1), R( 1.709193532310115e-2), R(1.603016028394201e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 34, 0, // SE
    {{R(3.649050478019264   ), R(-4.368516622212386e+1), R( 4.369202886011548e+1), R( 8.449022841991444e-3), R(3.786114741100382e-5)}},
    {{R(3.250432671125934   ), R( 6.096662016502890e-1), R( 5.969713008021232e-1), R( 1.485545127403623e-2), R(1.336255873565630e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 35, 0, // BR
    {{R(3.838463122242895   ), R(-5.227234710112339e+1), R( 5.198612794956596e+1), R( 7.339559893380448e-3), R(1.646942079513399e-5)}},
    {{R(2.611894705732323   ), R( 5.661950628747182e-1), R( 5.552793266998739e-1), R( 1.297464694324407e-2), R(1.029865368558757e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 36, 0, // KR
    {{R(4.025410303108274   ), R(-4.630423320789298e+1), R( 4.572136819041012e+1), R( 6.353379596253157e-3), R(1.334778452557430e-6)}},
    {{R(2.136483814437400   ), R( 5.265911664541312e-1), R( 5.141367844645776e-1), R( 1.128072422420068e-2), R(4.880898579409704e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 37, 0, // RB
    {{R(3.389753515953940   ), R( 2.143483486791724   ), R( 3.543226035109782e-1), R( 3.740093400856642e-3), R(3.003425023422297e-7)}},
    {{R(2.057448143681711e+1), R( 1.910799452185164   ), R( 1.974105893966039e-1), R( 8.134594653439889e-3), R(2.926857910569511e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 38, 0, // SR
    {{R(4.770925092998260   ), R( 1.475978501552834   ), R( 3.044513555441887e-1), R( 3.594749819167283e-3), R(3.000855492282790e-7)}},
    {{R(1.336688813304128e+1), R( 1.337383795771967   ), R( 1.775323694377828e-1), R( 7.791050330018268e-3), R(2.822551396485372e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 39, 0, // Y
    {{R(4.607210198752340   ), R( 1.428018510398403   ), R( 2.955810455777538e-1), R( 3.389978408528951e-3), R(2.668629749690224e-7)}},
    {{R(1.086869055571519e+1), R( 1.311374558731241   ), R( 1.680228707847112e-1), R( 7.359645453504783e-3), R(2.623432810213873e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 40, 0, // ZR
    {{R(4.311754534068716   ), R( 1.493315780393395   ), R( 2.812360501288841e-1), R( 3.093377384557471e-3), R(2.580244485125306e-7)}},
    {{R(9.458965805174902   ), R( 1.330636228452456   ), R( 1.565068714444536e-1), R( 6.824105238117352e-3), R(2.498188791107023e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 41, 0, // NB
    {{R(3.111790391134954   ), R( 2.202590609458031   ), R( 2.703307749100209e-1), R( 2.687991947510981e-3), R(2.325494833477792e-7)}},
    {{R(1.069031413430237e+1), R( 1.653163561589331   ), R( 1.451151857189699e-1), R( 6.139563515828505e-3), R(2.322402359376725e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 42, 0, // MO
    {{R(2.831059684320536   ), R( 2.348581374896745   ), R( 2.451058884296964e-1), R( 2.352821082185159e-3), R(2.312708383438592e-7)}},
    {{R(1.043571957589507e+1), R( 1.604828686745972   ), R( 1.316969347746069e-1), R( 5.549779013833459e-3), R(2.227474637648977e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 43, 0, // TC
    {{R(2.571798593233526   ), R( 2.456337419572030   ), R( 2.206584408813715e-1), R( 2.055314180124382e-3), R(2.321329477936922e-7)}},
    {{R(1.016431171313775e+1), R( 1.534419192445505   ), R( 1.191386197541104e-1), R( 5.018532408829888e-3), R(2.145903791208612e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 44, 0, // RU
    {{R(2.332300303539466   ), R( 2.535780254890496   ), R( 1.982080421360260e-1), R( 1.761201304600535e-3), R(1.981294115460245e-7)}},
    {{R(9.921674601599595   ), R( 1.455856688087881   ), R( 1.076821878733493e-1), R( 4.472435456549673e-3), R(1.965747162324994e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 45, 0, // RH
    {{R(2.113525348594700   ), R( 2.586363161550138   ), R( 1.770639138636865e-1), R( 1.497370510030569e-3), R(2.054814455556224e-7)}},
    {{R(9.659137258597623   ), R( 1.371066569343296   ), R( 9.703530275846488e-2), R( 3.971285090887921e-3), R(1.913551907377983e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 46, 0, // PD
    {{R(6.421597961826873e-1), R( 2.979148144263289   ), R( 1.681544260042708e-1), R( 1.337442138784078e-3), R(1.914109682468616e-7)}},
    {{R(5.974797502634061   ), R( 1.433594325412777   ), R( 9.098684011726770e-2), R( 3.624101371161622e-3), R(1.806889144160450e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 47, 0, // AG
    {{R(1.553172166803896   ), R( 2.639303646999888   ), R( 1.420154869567882e-1), R( 1.008504600997609e-3), R(1.946384299730244e-7)}},
    {{R(8.156202357589566   ), R( 1.216008874818015   ), R( 7.900988649158734e-2), R( 2.965479013639490e-3), R(1.745930959191462e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 48, 0, // CD
    {{R(6.153078519928602e+1), R(-7.860167412015821e+1), R( 2.155012926027705e+1), R( 1.376850156641916e-1), R(3.246449309465210e-4)}},
    {{R(3.114681025332473   ), R( 2.760169833885745   ), R( 1.935513123247224   ), R( 7.224683472602932e-2), R(1.170016296246845e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 49, 0, // IN
    {{R(4.222321779015246   ), R(-2.641213183532026e+1), R( 2.728528527087469e+1), R( 1.216179018841380e-1), R(3.068835463715258e-4)}},
    {{R(6.072655104032275   ), R( 1.645501789593879   ), R( 1.522570749395068   ), R( 6.565079146952256e-2), R(1.120938514730356e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 50, 0, // SN
    {{R(5.142220746420537   ), R(-2.549454137625767e+1), R( 2.574144875486019e+1), R( 1.117782275921996e-1), R(2.936473847377427e-4)}},
    {{R(5.272726364744845   ), R( 1.531949592091483   ), R( 1.402575250400872   ), R( 6.116853872630869e-2), R(1.075608153945223e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 51, 0, // SB
    {{R(6.241640318318837   ), R(-9.338687244195522e+1), R( 9.263328758298843e+1), R( 1.034126922212987e-1), R(2.818484268943907e-4)}},
    {{R(4.269841080826875   ), R( 1.394077461402502   ), R( 1.355668549104345   ), R( 5.726679496521998e-2), R(1.033079542820674e-3)}})));
  addElement(ConstElementPtr(new ElementLobato( 52, 0, // TE
    {{R(7.377433018134030   ), R(-1.260251069316281e+2), R( 1.241284050040956e+2), R( 9.599783718185698e-2), R(2.710722163988820e-4)}},
    {{R(3.469177577838978   ), R( 1.297598108867366   ), R( 1.267710676460660   ), R( 5.377717501794231e-2), R(9.930845770291768e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 53, 0, // I
    {{R(9.644006662721232   ), R(-1.229244353501125e+2), R( 1.186825648165673e+2), R( 8.950259470255390e-2), R(2.612761214904750e-4)}},
    {{R(2.726455453665441   ), R( 1.237234258508660   ), R( 1.200620368722498   ), R( 5.066786822851999e-2), R(9.554378833834973e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 54, 0, // XE
    {{R(1.554517496748606e+1), R(-1.182410278567446e+2), R( 1.080095249631970e+2), R( 8.362593419922217e-2), R(2.519918624290739e-4)}},
    {{R(2.106373408654927   ), R( 1.208603761295122   ), R( 1.153952705672140   ), R( 4.781893912748243e-2), R(9.198862575926131e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 55, 0, // CS
    {{R(4.287087391816923   ), R( 3.232506654229650   ), R( 6.740295335617063e-1), R( 6.189080833876976e-2), R(2.356120529521900e-4)}},
    {{R(2.265878707985415e+1), R( 2.237973864700642   ), R( 3.689955686643163e-1), R( 4.022665752984844e-2), R(8.837618908780351e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 56, 0, // BA
    {{R(6.244751873904615   ), R( 2.351722714163885   ), R( 4.742793732222520e-1), R( 6.381138742868499e-2), R(2.346512805627924e-4)}},
    {{R(1.514313541909856e+1), R( 1.453790006048140   ), R( 3.208356463878018e-1), R( 4.043545320946998e-2), R(8.540811312800327e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 57, 0, // LA
    {{R(6.097881795995097   ), R( 2.194951647366750   ), R( 5.481727919600226e-1), R( 6.166695732226626e-2), R(2.268073558647142e-4)}},
    {{R(1.242885443158548e+1), R( 1.505359923520235   ), R( 3.337380397171243e-1), R( 3.877445534999988e-2), R(8.240498840648670e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 58, 0, // CE
    {{R(5.795268796472405   ), R( 2.370226641078433   ), R( 4.713987569011149e-1), R( 5.743682605878668e-2), R(2.189794892596593e-4)}},
    {{R(1.428010550582560e+1), R( 1.359690157191345   ), R( 3.020173496635141e-1), R( 3.664367981470077e-2), R(7.954345265183711e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 59, 0, // PR
    {{R(5.604062553775258   ), R( 2.357962595618129   ), R( 4.760010985728824e-1), R( 5.441233743152471e-2), R(2.114146022051498e-4)}},
    {{R(1.395174902305747e+1), R( 1.312397549174392   ), R( 2.949337011929565e-1), R( 3.486015424623241e-2), R(7.682616826618097e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 60, 0, // ND
    {{R(5.429083919697703   ), R( 2.336873253608803   ), R( 4.833735541048819e-1), R( 5.146549645574790e-2), R(2.037761328637611e-4)}},
    {{R(1.365036494276600e+1), R( 1.267598413903199   ), R( 2.886106815769299e-1), R( 3.312918074466093e-2), R(7.423484838012663e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 61, 0, // PM
    {{R(5.267744450894446   ), R( 2.308558133263050   ), R( 4.932654790260128e-1), R( 4.863562797416966e-2), R(1.963088423206752e-4)}},
    {{R(1.336020968273946e+1), R( 1.225858565869417   ), R( 2.829196321278669e-1), R( 3.147353971271379e-2), R(7.176580250696152e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 62, 0, // SM
    {{R(5.126804285170776   ), R( 2.269255340083806   ), R( 5.042093004533025e-1), R( 4.569239924162220e-2), R(1.886750504938862e-4)}},
    {{R(1.315815010261290e+1), R( 1.181295082433371   ), R( 2.771070382190629e-1), R( 2.979576045495446e-2), R(6.940110991990983e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 63, 0, // EU
    {{R(4.979623597498092   ), R( 2.241830874556695   ), R( 5.129339614028937e-1), R( 4.298018484983344e-2), R(1.813816924857876e-4)}},
    {{R(1.283926630780338e+1), R( 1.147054464204860   ), R( 2.703871609352437e-1), R( 2.824187149526020e-2), R(6.714866031739924e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 64, 0, // GD
    {{R(5.078358300456114   ), R( 1.957440271816590   ), R( 5.928259832213751e-1), R( 4.195020341439256e-2), R(1.752410915283168e-4)}},
    {{R(1.051327254690473e+1), R( 1.117649412815246   ), R( 2.843867418336752e-1), R( 2.726633276413471e-2), R(6.503108607073037e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 65, 0, // TB
    {{R(4.711616366573001   ), R( 2.172619507865789   ), R( 5.397176013428657e-1), R( 3.797960045478111e-2), R(1.669237635648417e-4)}},
    {{R(1.231094159485391e+1), R( 1.087437967674925   ), R( 2.598049655092755e-1), R( 2.532899238951897e-2), R(6.292785669619112e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 66, 0, // DY
    {{R(4.590755044851466   ), R( 2.135723730365674   ), R( 5.513555600941525e-1), R( 3.560584067185138e-2), R(1.598240168567898e-4)}},
    {{R(1.206567406233699e+1), R( 1.058117371158644   ), R( 2.539944389186618e-1), R( 2.395087396496492e-2), R(6.094827484332881e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 67, 0, // HO
    {{R(4.484001106267108   ), R( 2.089043470785398   ), R( 5.659326183161046e-1), R( 3.327035902110630e-2), R(1.524456102828921e-4)}},
    {{R(1.187492506915706e+1), R( 1.028284937087896   ), R( 2.489078079080760e-1), R( 2.258440655321478e-2), R(5.903744451594245e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 68, 0, // ER
    {{R(4.376651407869632   ), R( 2.046451503836341   ), R( 5.806628605915877e-1), R( 3.123885283277667e-2), R(1.453748696625357e-4)}},
    {{R(1.166530807171395e+1), R( 1.003147696754953   ), R( 2.441532926863124e-1), R( 2.136185800007310e-2), R(5.721103384547666e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 69, 0, // TM
    {{R(4.283083182474195   ), R( 1.995380014537307   ), R( 5.970535713325043e-1), R( 2.909516688695599e-2), R(1.380647690375216e-4)}},
    {{R(1.149619059566834e+1), R( 9.770391020188206e-1), R( 2.394291329758291e-1), R( 2.009122333272558e-2), R(5.543771384922663e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 70, 0, // YB
    {{R(4.195638407371233   ), R( 1.943332859786456   ), R( 6.124466172854658e-1), R( 2.715152076949324e-2), R(1.305947873519297e-4)}},
    {{R(1.141077504566523e+1), R( 9.490119244548774e-1), R( 2.349503265353047e-1), R( 1.890515762809755e-2), R(5.372336492097111e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 71, 0, // LU
    {{R(4.356925932963843   ), R( 1.695892047773159   ), R( 6.639045200684705e-1), R( 2.630200187602814e-2), R(1.254973184998238e-4)}},
    {{R(9.294345147185689   ), R( 9.105000459574200e-1), R( 2.387465959113764e-1), R( 1.820985425464623e-2), R(5.215593719635622e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 72, 0, // HF
    {{R(4.331384056649235   ), R( 1.527648647286807   ), R( 7.357959228912380e-1), R( 2.495263232014026e-2), R(1.187408525810578e-4)}},
    {{R(7.876844338102884   ), R( 9.425156426277488e-1), R( 2.416994800398060e-1), R( 1.728998944485090e-2), R(5.058346313135256e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 73, 0, // TA
    {{R(4.197260013196420   ), R( 1.468548067747088   ), R( 7.839312482110882e-1), R( 2.324940948643951e-2), R(1.112613586072860e-4)}},
    {{R(6.936740248944572   ), R( 1.017252766183483   ), R( 2.389489397150706e-1), R( 1.623324330753810e-2), R(4.902390040211490e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 74, 0, // W
    {{R(3.976297158190774   ), R( 1.522926842573418   ), R( 7.977062463905613e-1), R( 2.136667415586852e-2), R(1.030786893857173e-4)}},
    {{R(6.296857792287749   ), R( 1.112899511576911   ), R( 2.310570406784734e-1), R( 1.510135455672045e-2), R(4.746824771050258e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 75, 0, // RE
    {{R(3.751443814398119   ), R( 1.627688029776327   ), R( 7.817567554542718e-1), R( 1.951708039122916e-2), R(9.431998042934275e-5)}},
    {{R(5.797546360829538   ), R( 1.182236310777107   ), R( 2.199135860247702e-1), R( 1.398104554814566e-2), R(4.591271258298386e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 76, 0, // OS
    {{R(3.484015173387116   ), R( 1.793779204169655   ), R( 7.448783566919203e-1), R( 1.754277851624345e-2), R(8.448723515688600e-5)}},
    {{R(5.439988460809537   ), R( 1.227921341401281   ), R( 2.062088569929092e-1), R( 1.278994017211460e-2), R(4.430322267874786e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 77, 0, // IR
    {{R(1.599565781988442   ), R( 2.975344521941205   ), R( 6.950926783668822e-1), R( 1.487796274586880e-2), R(6.905495791015833e-5)}},
    {{R(5.792444473855675   ), R( 1.553009829732260   ), R( 1.886263359366482e-1), R( 1.117634706624533e-2), R(4.227723616555514e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 78, 0, // PT
    {{R(2.040215639757283   ), R( 2.899226346248255   ), R( 6.363440838157977e-1), R( 1.320719195954083e-2), R(5.673821925001312e-5)}},
    {{R(6.658194296096275   ), R( 1.413379237789324   ), R( 1.740001045021790e-1), R( 1.006878045302105e-2), R(4.030771056922231e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 79, 0, // AU
    {{R(1.675934670648708   ), R( 3.004866029697293   ), R( 5.953400131616355e-1), R( 1.171631866230948e-2), R(4.296782976398171e-5)}},
    {{R(5.522310932114025   ), R( 1.380072230071963   ), R( 1.622292376559454e-1), R( 9.018148904165756e-3), R(3.792776674776671e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 80, 0, // HG
    {{R(2.235228504431053   ), R( 2.682766386519949   ), R( 5.551949262124333e-1), R( 1.072733543662587e-2), R(3.284739920462629e-5)}},
    {{R(5.020309889602403   ), R( 1.230775905837777   ), R( 1.522481229928636e-1), R( 8.283991169062104e-3), R(3.562419389317589e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 81, 0, // TL
    {{R(2.803427374125100   ), R( 2.718827879660200   ), R( 5.224759153919996e-1), R( 9.845378369710420e-3), R(2.345245265083162e-5)}},
    {{R(6.558768728045342   ), R( 1.169724225166679   ), R( 1.435566918001781e-1), R( 7.619765262300398e-3), R(3.296276739029854e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 82, 0, // PB
    {{R(3.608610209977714   ), R( 2.450567747371983   ), R( 4.786395001072570e-1), R( 8.872142351692152e-3), R(1.040019329094673e-5)}},
    {{R(6.581625946219628   ), R( 1.027728526605885   ), R( 1.335336806347209e-1), R( 6.848612389484298e-3), R(2.763888754566660e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 83, 0, // BI
    {{R(4.242099010573159   ), R( 2.099943420558279   ), R( 4.328366313799229e-1), R( 8.020215703810592e-3), R(7.217850308513403e-7)}},
    {{R(5.752801155360800   ), R( 8.739014891954615e-1), R( 1.235999561805247e-1), R( 6.176003330585702e-3), R(1.414951776172309e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 84, 0, // PO
    {{R(4.636200956689623   ), R( 1.780633114269871   ), R( 4.037304439527385e-1), R( 7.685395546686740e-3), R(8.954159028076436e-8)}},
    {{R(4.888252997809829   ), R( 7.563105268800747e-1), R( 1.173023644522492e-1), R( 5.930343942428942e-3), R(7.666686638730287e-5)}})));
  addElement(ConstElementPtr(new ElementLobato( 85, 0, // AT
    {{R(4.965922505950705   ), R( 1.438155615070337   ), R( 3.712992005792981e-1), R( 7.472564284502011e-3), R(1.141152841525851e-7)}},
    {{R(4.091293787874963   ), R( 6.292289966025513e-1), R( 1.110966786955352e-1), R( 5.772350103477618e-3), R(8.085118938793825e-5)}})));
  addElement(ConstElementPtr(new ElementLobato( 86, 0, // RN
    {{R(5.306156144750332   ), R( 1.117331602360721   ), R( 3.158587231108543e-1), R( 7.203422423102100e-3), R(1.073553305458635e-7)}},
    {{R(3.488007354816557   ), R( 4.811907411497712e-1), R( 1.018744679457531e-1), R( 5.592453744170787e-3), R(7.795066735407367e-5)}})));
  addElement(ConstElementPtr(new ElementLobato( 87, 0, // FR
    {{R(4.520533990423360   ), R( 4.106953979091246   ), R( 7.139468785037285e-1), R( 1.692940276874539e-2), R(8.574921291917244e-5)}},
    {{R(1.944822342329488e+1), R( 1.898246731559969   ), R( 1.695535635953418e-1), R( 1.148195675489342e-2), R(3.461220382579827e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 88, 0, // RA
    {{R(6.524010720018733   ), R( 3.207870807456613   ), R( 5.404787743496377e-1), R( 8.782788068988532e-3), R(6.910106029491315e-6)}},
    {{R(1.400925542989749e+1), R( 1.326350359616653   ), R( 1.314085683860361e-1), R( 6.286474345204096e-3), R(2.278399814589510e-4)}})));
  addElement(ConstElementPtr(new ElementLobato( 89, 0, // AC
    {{R(6.896028535596191   ), R( 2.835141545365232   ), R( 5.035068818888151e-1), R( 8.022945109667069e-3), R(9.204009547587397e-8)}},
    {{R(1.107638256703987e+1), R( 1.171326162905030   ), R( 1.234946513917999e-1), R( 5.735155957904971e-3), R(7.197075418025232e-5)}})));
  addElement(ConstElementPtr(new ElementLobato( 90, 0, // TH
    {{R(7.093749001626302   ), R( 2.529123739031940   ), R( 4.821078198888890e-1), R( 7.719366741451110e-3), R(7.271141994250414e-8)}},
    {{R(9.094737951659447   ), R( 1.063916670331612   ), R( 1.186194466218779e-1), R( 5.539457088950347e-3), R(6.584947305284627e-5)}})));
  addElement(ConstElementPtr(new ElementLobato( 91, 0, // PA
    {{R(6.434013247972842   ), R( 2.970999705357888   ), R( 4.607966517878480e-1), R( 7.240331257754553e-3), R(6.362366643091279e-8)}},
    {{R(1.025968513072979e+1), R( 1.131774523061633   ), R( 1.127759353623823e-1), R( 5.274595833531321e-3), R(6.192638240887597e-5)}})));
  addElement(ConstElementPtr(new ElementLobato( 92, 0, // U
    {{R(6.210708267840199   ), R( 3.039344538256235   ), R( 4.373399844391628e-1), R( 6.807147641473166e-3), R(6.182293277428513e-8)}},
    {{R(1.002141058591628e+1), R( 1.103998801558834   ), R( 1.072189731624539e-1), R( 5.024321308506824e-3), R(6.005069941971958e-5)}})));
  addElement(ConstElementPtr(new ElementLobato( 93, 0, // NP
    {{R(6.004315983089865   ), R( 3.094316545314180   ), R( 4.128084877164170e-1), R( 6.408916578800669e-3), R(6.730073762160754e-8)}},
    {{R(9.817930467191061   ), R( 1.069787050680294   ), R( 1.016352914486458e-1), R( 4.795248468887250e-3), R(6.028065987264629e-5)}})));
  addElement(ConstElementPtr(new ElementLobato( 94, 0, // PU
    {{R(5.200617168103042   ), R( 3.498494403671440   ), R( 4.054149311313203e-1), R( 6.223437008265299e-3), R(6.008593295434409e-8)}},
    {{R(1.120383101944067e+1), R( 1.128463695469282   ), R( 9.893334726861316e-2), R( 4.659174319779507e-3), R(5.725906389623341e-5)}})));
  addElement(ConstElementPtr(new ElementLobato( 95, 0, // AM
    {{R(5.025338600360291   ), R( 3.518439882851541   ), R( 3.819503494462722e-1), R( 5.821102080962110e-3), R(6.526093388297119e-8)}},
    {{R(1.097721906976287e+1), R( 1.084772148326308   ), R( 9.367468748538359e-2), R( 4.426823468734856e-3), R(5.738568370505115e-5)}})));
  addElement(ConstElementPtr(new ElementLobato( 96, 0, // CM
    {{R(5.346561002606197   ), R( 3.224684665609108   ), R( 3.494617526254452e-1), R( 5.292517567488151e-3), R(6.159176302362374e-8)}},
    {{R(9.231183797524494   ), R( 9.728362291938352e-1), R( 8.705962209665623e-2), R( 4.130119644650323e-3), R(5.494638944496757e-5)}})));
  addElement(ConstElementPtr(new ElementLobato( 97, 0, // BK
    {{R(5.225823503340047   ), R( 3.228188739952953   ), R( 3.270988788238514e-1), R( 4.888825755922390e-3), R(5.212722694193633e-8)}},
    {{R(9.071357066187183   ), R( 9.311242774566348e-1), R( 8.207206020598455e-2), R( 3.890296559934166e-3), R(5.103679766366416e-5)}})));
  addElement(ConstElementPtr(new ElementLobato( 98, 0, // CF
    {{R(4.586412477535479   ), R( 3.518695956651012   ), R( 3.192617142012054e-1), R( 4.729796479856258e-3), R(5.513244808062041e-8)}},
    {{R(1.031861020923352e+1), R( 9.572788378292328e-1), R( 7.968074314438807e-2), R( 3.771931999968489e-3), R(5.097508603760111e-5)}})));
  addElement(ConstElementPtr(new ElementLobato( 99, 0, // ES
    {{R(4.457994806754126   ), R( 3.508672126376623   ), R( 3.013753805283154e-1), R( 4.407637462144819e-3), R(4.887879032285916e-8)}},
    {{R(1.008906933834013e+1), R( 9.194464473616226e-1), R( 7.564191777863293e-2), R( 3.570264651248093e-3), R(4.804951743958113e-5)}})));
  addElement(ConstElementPtr(new ElementLobato(100, 0, // FM
    {{R(4.338975764011709   ), R( 3.491850988964034   ), R( 2.814710990162868e-1), R( 4.002092714990461e-3), R(5.529298081955140e-8)}},
    {{R(9.963309372238362   ), R( 8.780839569829744e-1), R( 7.116371157687776e-2), R( 3.321524042150777e-3), R(4.851031794603728e-5)}})));
  addElement(ConstElementPtr(new ElementLobato(101, 0, // MD
    {{R(4.227294704031012   ), R( 3.472492275106616   ), R( 2.648222294968986e-1), R( 3.690728778331929e-3), R(6.258714262002473e-8)}},
    {{R(9.724006020400314   ), R( 8.428737759602104e-1), R( 6.735347439748511e-2), R( 3.123646062633208e-3), R(4.912170970176192e-5)}})));
  addElement(ConstElementPtr(new ElementLobato(102, 0, // NO
    {{R(4.109517024430204   ), R( 3.457991325227507   ), R( 2.470873512223867e-1), R( 3.304239209409952e-3), R(5.991049262319316e-8)}},
    {{R(9.677359945101202   ), R( 8.069400424708172e-1), R( 6.328154369541671e-2), R( 2.875446396412092e-3), R(4.706791536975981e-5)}})));
  addElement(ConstElementPtr(new ElementLobato(103, 0, // LR
    {{R(4.521474211983788   ), R( 3.202129855878044   ), R( 2.230287269564517e-1), R( 2.817164538920297e-3), R(4.064279540386205e-8)}},
    {{R(8.283099068611421   ), R( 7.319189581253939e-1), R( 5.809427730186550e-2), R( 2.561680160474449e-3), R(4.038165155290065e-5)}})));
}

class AURORA_API RegisterLobato
{
public:
  RegisterLobato()
  {
    FormFactorParametrization::registerClass<FormFactorParametrizationLobato>
      ("Lobato");
  }
} registerLobato;

} // namespace Aurora
